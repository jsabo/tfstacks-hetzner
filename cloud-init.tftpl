#cloud-config
---
package_update: true
package_upgrade: true

runcmd:
  # Load necessary kernel modules and setup networking for Kubernetes
  - |
    echo "Loading kernel modules and setting up networking for Kubernetes"
    cat <<EOF | tee /etc/modules-load.d/k8s.conf /etc/sysctl.d/k8s.conf
    overlay
    br_netfilter
    EOF
    modprobe overlay && modprobe br_netfilter
    cat <<EOF | tee -a /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    EOF
    sysctl --system

  # Disable swap as required by Kubernetes
  - |
    echo "Disabling swap"
    swapoff -a
    sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

  # Install and configure containerd and Kubernetes components
  - |
    echo "Installing and configuring containerd and Kubernetes components"
    mkdir -p -m 755 /etc/apt/keyrings
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v${kubernetes_version}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v${kubernetes_version}/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
    apt update
    apt install -y apt-transport-https ca-certificates containerd curl gpg kubelet kubeadm kubectl
    apt-mark hold kubelet kubeadm kubectl

    # Configure containerd
    mkdir -p /etc/containerd
    containerd config default | tee /etc/containerd/config.toml
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
    systemctl enable containerd
    systemctl restart containerd
